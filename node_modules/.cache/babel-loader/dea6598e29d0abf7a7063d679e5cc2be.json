{"ast":null,"code":"function useOperand(left, right, operation) {\n  const one = parseFloat(left || \"0\");\n  const two = parseFloat(right || (operation === \"/\" || operation === '*' ? \"1\" : \"0\"));\n\n  if (operation === \"+\") {\n    return (one + two).toString();\n  }\n\n  if (operation === \"-\") {\n    return (one - two).toString();\n  }\n\n  if (operation === \"*\") {\n    return (one * two).toString();\n  }\n\n  if (operation === \"/\") {\n    if (two == \"0\") {\n      return \"NaN\";\n    }\n\n    if (two != \"0\") {\n      return (one / two).toString();\n    }\n  }\n\n  throw Error(`Unknown operation '${operation}'`);\n}\n\nfunction Calculate(state, button) {\n  var num = \"0123456789\";\n\n  if (button === \"C\") {\n    return {\n      result: \"0\",\n      next: null,\n      operation: null\n    };\n  }\n\n  if (num.indexOf(button) !== -1) {\n    if (button === \"0\" && state.next === \"0\") {\n      return {};\n    }\n\n    if (state.operation) {\n      //연산자가 있다면\n      if (state.next) {\n        return {\n          next: state.next + button\n        };\n      }\n\n      return {\n        next: button\n      };\n    }\n\n    if (state.next) {\n      const next = state.next === \"0\" ? button : state.next + button;\n      return {\n        next,\n        result: null\n      };\n    }\n\n    return {\n      next: button,\n      result: null\n    };\n  }\n\n  if (button === \".\") {\n    if (state.next) {\n      if (state.next.includes(\".\")) {\n        return {};\n      }\n\n      return {\n        next: state.next + \".\"\n      };\n    }\n\n    return {\n      next: \"0.\"\n    };\n  }\n\n  if (button === \"=\") {\n    if (state.next && state.operation) {\n      return {\n        result: useOperand(state.result, state.next, state.operation),\n        next: null,\n        operation: null\n      };\n    }\n  }\n\n  if (state.operation) {\n    return {\n      result: useOperand(state.result, state.next, state.operation),\n      next: null,\n      operation: button\n    };\n  }\n\n  if (!state.next) {\n    return {\n      operation: button\n    };\n  }\n\n  return {\n    result: state.next,\n    next: null,\n    operation: button\n  };\n}\n\nexport default calculate;","map":{"version":3,"sources":["/home/parkji/react_calculator/src/functionCalculate.js"],"names":["useOperand","left","right","operation","one","parseFloat","two","toString","Error","Calculate","state","button","num","result","next","indexOf","includes","calculate"],"mappings":"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","sourcesContent":["function useOperand(left, right, operation) {\n  const one = parseFloat(left || \"0\")\n  const two = parseFloat(right || (operation === \"/\" || operation === '*' ? \"1\": \"0\"))\n  if (operation === \"+\") {\n    return (one+two).toString();\n  }\n  if (operation === \"-\") {\n    return (one-two).toString();\n  }\n  if (operation === \"*\") {\n    return (one*two).toString();\n  }\n  if (operation === \"/\") {\n    if (two == \"0\") {\n      return \"NaN\";\n    } \n    if (two != \"0\"){\n      return (one/two).toString();\n    }\n}   \n  throw Error(`Unknown operation '${operation}'`);\n}\n\nfunction Calculate(state, button) {\n    var num = \"0123456789\"\n    if (button === \"C\") {\n      return {\n        result: \"0\",\n        next: null,\n        operation: null,\n      };\n    }\n    \n    if (num.indexOf(button) !== -1) {\n      if (button === \"0\" && state.next === \"0\") {\n        return {};\n      }\n\n      if (state.operation) { //연산자가 있다면\n        if (state.next) {\n          return { next: state.next + button };\n        }\n        return { next: button };\n      }\n\n      if (state.next) {\n        const next = state.next === \"0\" ? button : state.next + button;\n        return {\n          next,\n          result: null,\n        };\n      }\n      return {\n        next: button,\n        result: null,\n      };\n    }\n   \n    if (button === \".\") {\n      if (state.next) {\n        if (state.next.includes(\".\")) {\n          return {};\n        }\n        return { next: state.next + \".\" };\n      }\n      return { next: \"0.\" };\n    }\n  \n    if (button === \"=\") {\n      if (state.next && state.operation) {\n        return {\n          result: useOperand(state.result, state.next, state.operation),\n          next: null,\n          operation: null,\n        };\n      } \n    }\n  \n    if (state.operation) {\n      return {\n        result: useOperand(state.result, state.next, state.operation),\n        next: null,\n        operation: button,\n      };\n    }\n\n    if (!state.next) {\n      return { operation: button };\n    }\n  \n    return {\n      result: state.next,\n      next: null,\n      operation: button,\n    };\n  }\n\n  export default calculate;"]},"metadata":{},"sourceType":"module"}